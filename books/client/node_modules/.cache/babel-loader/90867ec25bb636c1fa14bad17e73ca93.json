{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\oleg-\\\\OneDrive\\\\Documents\\\\HWs\\\\hw17\\\\GroupWork\\\\12-Stu_GoogleBooksSearch\\\\books\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\oleg-\\\\OneDrive\\\\Documents\\\\HWs\\\\hw17\\\\GroupWork\\\\12-Stu_GoogleBooksSearch\\\\books\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg-\\\\OneDrive\\\\Documents\\\\HWs\\\\hw17\\\\GroupWork\\\\12-Stu_GoogleBooksSearch\\\\books\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg-\\\\OneDrive\\\\Documents\\\\HWs\\\\hw17\\\\GroupWork\\\\12-Stu_GoogleBooksSearch\\\\books\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg-\\\\OneDrive\\\\Documents\\\\HWs\\\\hw17\\\\GroupWork\\\\12-Stu_GoogleBooksSearch\\\\books\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg-\\\\OneDrive\\\\Documents\\\\HWs\\\\hw17\\\\GroupWork\\\\12-Stu_GoogleBooksSearch\\\\books\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg-\\\\OneDrive\\\\Documents\\\\HWs\\\\hw17\\\\GroupWork\\\\12-Stu_GoogleBooksSearch\\\\books\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar Detail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Detail, _Component);\n\n  function Detail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Detail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        _this.setState({\n          books: res.data,\n          title: \"\"\n        });\n\n        console.log(_this.state.books);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleFormSave = function (event, book) {\n      console.log(book);\n      API.saveBook({\n        title: book.volumeInfo.title,\n        author: book.volumeInfo.authors[0],\n        synosis: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks.smallThumbnail,\n        link: book.volumeInfo.previewLink\n      }).then(function (res) {\n        return res;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.loadBooks(_this.state.title);\n\n      if (_this.state.title && _this.state.author) {\n        API.saveBook({\n          title: _this.state.title,\n          author: _this.state.author,\n          synopsis: _this.state.synopsis\n        }).then(function (res) {\n          return _this.loadBooks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"React Google Book Search\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" Search for and Save Books of Interest\")), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: book.link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(FormBtn, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"View\")), React.createElement(FormBtn, {\n          id: book.id,\n          value: book.id,\n          onClick: function onClick() {\n            return _this2.deleteBook(book.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: book.link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, book.title, \" by \", book.author))), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"col-md-2\",\n          src: book.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"col-md-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, book.title)));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Detail;\n}(Component);\n\nexport default Detail; // import React, { Component } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n// import API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n// class Books extends Component {\n//   state = {\n//     books: [],\n//     title: \"Harry Potter\",\n//   };\n//   componentDidMount() {\n//     // this.loadBooks();\n//   }\n//   loadBooks = () => {\n//     API.searchBooks(this.state.title).then(res =>{\n//       this.setState({ books: res.data.items, title: \"\"})\n//       console.log(this.state.books)\n//     }\n//     )\n//       .catch(err => console.log(err));\n//   };\n//   deleteBook = id => {\n//     API.deleteBook(id)\n//       .then(res => this.loadBooks())\n//       .catch(err => console.log(err));\n//   };\n//   handleInputChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     this.loadBooks(this.state.title);\n//    if (this.state.title && this.state.author) {\n//       API.saveBook({\n//         title: this.state.title,\n//         author: this.state.author,\n//         synopsis: this.state.synopsis\n//       })\n//         .then(res => this.loadBooks())\n//         .catch(err => console.log(err));\n//     }\n//   };\n//   hanleFormView = event => {\n//   }\n//   handleFormSave = event => {\n//   }\n//   render() {\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size=\"md-12\">\n//             <Jumbotron>\n//               <h1>React Google Book Search</h1>\n//               <h3> Search for and Save Books of Interest</h3>\n//             </Jumbotron>\n//             <Jumbotron>\n//               <h4> Book Search</h4>\n//               <h5> Book:</h5>\n//               <form>\n//               <Input\n//                 value={this.state.title}\n//                 onChange={this.handleInputChange}\n//                 name=\"title\"\n//                 placeholder=\"Book Title (required)\"\n//               />\n//                <FormBtn\n//                 disabled={!(this.state.title)}\n//                 onClick={this.handleFormSubmit}\n//               >\n//                 Submit Book\n//               </FormBtn>\n//               </form>\n//             </Jumbotron>\n//             {this.state.books.length ? (\n//               <List>                \n//                 {this.state.books.map(book => (\n//                   <ListItem key={book.id}>\n//                 <FormBtn\n//                 onClick={this.handleFormView}\n//               >\n//                 View\n//               </FormBtn>\n//               <FormBtn\n//                 onClick={this.handleFormSave}\n//               >\n//                 Save\n//               </FormBtn>                                \n//                     <Link to={\"/books/\" + book.id}>\n//                     <div className=\"row\">\n//                       <strong>\n//                         {book.volumeInfo.title} by {book.volumeInfo.authors[0]}\n//                       </strong>\n//                       </div>                      \n//                     </Link>\n//                     <div className=\"row\">\n//                       <img className=\"col-md-2\" src={book.volumeInfo.imageLinks.smallThumbnail} >\n//                       </img>\n//                       <p className=\"col-md-10\">\n//                       {book.volumeInfo.description}\n//                       </p>\n//                     </div>\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             ) : (\n//               <h3>No Results to Display</h3>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n//     );\n//   }\n// }\n// export default Books;","map":{"version":3,"sources":["C:\\Users\\oleg-\\OneDrive\\Documents\\HWs\\hw17\\GroupWork\\12-Stu_GoogleBooksSearch\\books\\client\\src\\pages\\Search.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Detail","state","books","title","loadBooks","getBooks","then","res","setState","data","console","log","catch","err","deleteBook","id","handleFormSave","event","book","saveBook","volumeInfo","author","authors","synosis","description","image","imageLinks","smallThumbnail","link","previewLink","handleInputChange","target","name","value","handleFormSubmit","preventDefault","synopsis","length","map"],"mappings":"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":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Detail extends Component {\n    state = {\n        books: [],\n        title: \"\",\n    };\n\ncomponentDidMount() {\n     this.loadBooks();\n}\n\n\n\nloadBooks = () => {\n    API.getBooks().then(res =>{\n        this.setState({ books: res.data, title: \"\"})\n        console.log(this.state.books)\n    }\n\n                                          )\n        .catch(err => console.log(err));\n};\n\ndeleteBook = id => {\n    API.deleteBook(id)\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n};\n\nhandleFormSave = (event,book) => {\n    console.log(book);\n    API.saveBook({\n        title: book.volumeInfo.title,\n        author: book.volumeInfo.authors[0],\n        synosis: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks.smallThumbnail,\n        link: book.volumeInfo.previewLink,\n    })\n        .then(res => res)\n        .catch(err => console.log(err));\n}\n\nhandleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n        [name]: value\n    });\n};\n\n\nhandleFormSubmit = event => {\n    event.preventDefault();\n    this.loadBooks(this.state.title);\n\n    if (this.state.title && this.state.author) {\n        API.saveBook({\n            title: this.state.title,\n            author: this.state.author,\n            synopsis: this.state.synopsis\n        })\n            .then(res => this.loadBooks())\n            .catch(err => console.log(err));\n    }\n};\n\n\n\nrender() {\n    return (\n        <Container fluid>\n        <Row>\n        <Col size=\"md-12\">\n        <Jumbotron>\n        <h1>React Google Book Search</h1>\n        <h3> Search for and Save Books of Interest</h3>\n        </Jumbotron>\n{this.state.books.length ? (\n    <List>                \n    {this.state.books.map(book => (\n     <ListItem key={book.id}>\n    <a href={book.link}>\n    <FormBtn              >\n    View\n    </FormBtn>\n    </a>\n           \n    <FormBtn id={book.id} value={book.id}\n    onClick={() => this.deleteBook(book.id)}\n    >\n    Delete\n    </FormBtn>          \n    \n    <div className=\"row\">\n    <a href={book.link}> \n    <strong>\n    {book.title} by {book.author}\n    </strong>\n    </a>\n    </div>                      \n    <div className=\"row\">\n    <img className=\"col-md-2\" src={book.image} >\n    </img>\n    <p className=\"col-md-10\">\n    {book.title}\n    </p>\n    </div>\n\n    </ListItem>\n))}\n    </List>\n) : (\n    <h3>No Results to Display</h3>\n)}\n</Col>\n</Row>\n</Container>\n);\n}\n}\n\nexport default Detail;\n\n// import React, { Component } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n// import API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\n// class Books extends Component {\n//   state = {\n//     books: [],\n//     title: \"Harry Potter\",\n//   };\n\n//   componentDidMount() {\n//     // this.loadBooks();\n//   }\n\n//   loadBooks = () => {\n//     API.searchBooks(this.state.title).then(res =>{\n//       this.setState({ books: res.data.items, title: \"\"})\n//       console.log(this.state.books)\n//     }\n    \n//     )\n//       .catch(err => console.log(err));\n//   };\n\n//   deleteBook = id => {\n//     API.deleteBook(id)\n//       .then(res => this.loadBooks())\n//       .catch(err => console.log(err));\n//   };\n\n//   handleInputChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n\n\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     this.loadBooks(this.state.title);\n\n//    if (this.state.title && this.state.author) {\n//       API.saveBook({\n//         title: this.state.title,\n//         author: this.state.author,\n//         synopsis: this.state.synopsis\n//       })\n//         .then(res => this.loadBooks())\n//         .catch(err => console.log(err));\n//     }\n//   };\n\n//   hanleFormView = event => {\n\n//   }\n\n//   handleFormSave = event => {\n    \n//   }\n\n//   render() {\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size=\"md-12\">\n//             <Jumbotron>\n//               <h1>React Google Book Search</h1>\n//               <h3> Search for and Save Books of Interest</h3>\n//             </Jumbotron>\n//             <Jumbotron>\n//               <h4> Book Search</h4>\n//               <h5> Book:</h5>\n//               <form>\n//               <Input\n//                 value={this.state.title}\n//                 onChange={this.handleInputChange}\n//                 name=\"title\"\n//                 placeholder=\"Book Title (required)\"\n//               />\n//                <FormBtn\n//                 disabled={!(this.state.title)}\n//                 onClick={this.handleFormSubmit}\n//               >\n//                 Submit Book\n//               </FormBtn>\n//               </form>\n//             </Jumbotron>\n//             {this.state.books.length ? (\n//               <List>                \n//                 {this.state.books.map(book => (\n//                   <ListItem key={book.id}>\n//                 <FormBtn\n//                 onClick={this.handleFormView}\n//               >\n//                 View\n//               </FormBtn>\n//               <FormBtn\n//                 onClick={this.handleFormSave}\n//               >\n//                 Save\n//               </FormBtn>                                \n//                     <Link to={\"/books/\" + book.id}>\n//                     <div className=\"row\">\n//                       <strong>\n//                         {book.volumeInfo.title} by {book.volumeInfo.authors[0]}\n//                       </strong>\n//                       </div>                      \n//                     </Link>\n//                     <div className=\"row\">\n//                       <img className=\"col-md-2\" src={book.volumeInfo.imageLinks.smallThumbnail} >\n//                       </img>\n//                       <p className=\"col-md-10\">\n//                       {book.volumeInfo.description}\n//                       </p>\n//                     </div>\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             ) : (\n//               <h3>No Results to Display</h3>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default Books;\n"]},"metadata":{},"sourceType":"module"}